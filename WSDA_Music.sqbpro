<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="WSDA_Music.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3930"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="10" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Track" custom_title="0" dock_id="1" table="4,5:mainTrack"/><dock_state state="000000ff00000000fd000000010000000200000581000003c0fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000005810000013500ffffff000005810000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="56"/><column index="2" value="287"/><column index="3" value="54"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="75"/><column index="2" value="79"/><column index="3" value="103"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="159"/><column index="7" value="55"/><column index="8" value="119"/><column index="9" value="87"/><column index="10" value="159"/><column index="11" value="151"/><column index="12" value="239"/><column index="13" value="89"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="62"/><column index="2" value="77"/><column index="3" value="159"/><column index="4" value="300"/><column index="5" value="159"/><column index="6" value="72"/><column index="7" value="119"/><column index="8" value="104"/><column index="9" value="63"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="52"/><column index="2" value="199"/><column index="3" value="58"/><column index="4" value="84"/><column index="5" value="56"/><column index="6" value="247"/><column index="7" value="76"/><column index="8" value="87"/><column index="9" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- Primera consulta 
/*
Comentario de varias lineas
CREATED BY ADRIAN
CREATE DATE: 08/06/2025
DESCRIPTION: This is the estructure of a basic quiery
*/</sql><sql name="SQL 3">SELECT 
    Name AS [Track Name],
    UnitPrice AS Price
FROM Track AS t;</sql><sql name="SQL 4">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 08/06/2025
DESCRIPTION: Clientes que compraron canciones entre 1.98 y 5 dolares
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM 
	Invoice
WHERE 
	total BETWEEN 1.98 AND 5.00
ORDER BY
	InvoiceDate</sql><sql name="SQL 6">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 08/06/2025
DESCRIPTION: Clientes que compraron canciones que costaron exactamente 1.98 o 3.96 dolares
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM 
	Invoice
WHERE 
	--total= 1.98 OR total = 3.96
	total IN (1.98,3.96)
ORDER BY
	InvoiceDate</sql><sql name="SQL 7">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Cuantas facturas se facturaron en la ciudad de Bruselas
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM 
	Invoice
WHERE 
	BillingCity = 'Brussels'
ORDER BY
	InvoiceDate</sql><sql name="SQL 8">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Cuantas facturas se facturaron en la ciudad de Bruselas, París y Orlando
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM 
	Invoice
WHERE 
	BillingCity IN ('Brussels', 'Orlando', 'Paris')
ORDER BY
	InvoiceDate</sql><sql name="SQL 9">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Cuantas facturas se facturaron en la ciudad que empiezan por B
*/

--El % es un caracter comodin, se utiliza con LIKE para buscar patrones flexibles
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM 
	Invoice
WHERE 
	BillingCity LIKE 'B%'
ORDER BY
	InvoiceDate</sql><sql name="SQL 10">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Cuantas facturas se facturaron en la ciudad que tenga la letra b
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM 
	Invoice
WHERE 
	BillingCity LIKE '%B%'
ORDER BY
	InvoiceDate</sql><sql name="SQL 11">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Cuantas facturas se facturaron el 22 de mayo 2010
*/

--El % es un caracter comodin, se utiliza con LIKE para buscar patrones flexibles
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity
FROM 
	Invoice
WHERE 
	--InvoiceDate = '2010-05-22 00:00:00'
	DATE(InvoiceDate)= '2010-05-22'
ORDER BY
	InvoiceDate</sql><sql name="SQL 12">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Todas las facturas que se facturaron despues de 2010-05-22 y tiene un total o menos de tres dolares
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM 
	Invoice
WHERE 
	InvoiceDate &gt; '2010-05-22 00:00:00' AND total &lt; 3.00
ORDER BY
	InvoiceDate</sql><sql name="SQL 13">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Todas las facturas que se facturaron en las ciudades que empiezan por la letra P o la letra D
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM 
	Invoice
WHERE 
	BillingCity LIKE 'P%' OR BillingCity LIKE 'D%' 
ORDER BY
	InvoiceDate</sql><sql name="SQL 14">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Todas las facturas que superen los 1.9 dolares se facturaron en las ciudades que empiezan por la letra P o la letra D
*/
/*
Reglas PEMDAS- Parentesis, Exponentes, Multiplicación/Division, suma/resta
*/
SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total
FROM 
	Invoice
WHERE 
--Cuando hay varias consultas es necesario usar corchetes o parentesis, porque se sigue el orden de las operaciones matemáticas PEMDAS
	(BillingCity LIKE 'P%' OR BillingCity LIKE 'D%') AND total&gt;1.98
ORDER BY
	InvoiceDate</sql><sql name="SQL 15">/*
CREATED BY: ADRIAN CARRERO
CREATED DATE: 09/06/2025
DESCRIPTION: Utilización de la clausula CASE

Categorias de ventas:
 Gasto base: entre 0.99 y 1.99 dolares
 Gasto bajo: entre 2 y 6.99 dolares
 Gasto esperado: entre 7 y 15 $
 Gasto Top: mas de 15 $
*/

SELECT
	InvoiceDate,
	BillingAddress,
	BillingCity,
	total,
	CASE 
	WHEN total &lt; 2.00 THEN 'Baseline Purchase'
	WHEN total BETWEEN 2.00 AND 6.99 THEN 'Low Purchase'
	WHEN total BETWEEN 7.00 AND 15.00 THEN 'Target Purchase'
	ELSE 'Top Performer'
	END AS PurchaseType
FROM 
	Invoice
WHERE
	PurchaseType = 'Top Performer'
ORDER BY
	InvoiceDate</sql><sql name="SQL 16">SELECT 
    t.Name AS &quot;Track Name&quot;,
    t.Composer, 
    t.UnitPrice AS Price,
    CASE
    WHEN UnitPrice &lt;= 0.99 THEN 'Budget'
    WHEN UnitPrice BETWEEN 1 AND UnitPrice &lt;=1.49 THEN  'Regular'
    WHEN UnitPrice BETWEEN 1.50 AND UnitPrice &lt;=1.99 THEN 'Premium'
    ELSE 'Exclusive'
    END AS PriceCategory
FROM 
	Track AS t
ORDER BY 
	t.UnitPrice ;</sql><current_tab id="13"/></tab_sql></sqlb_project>
